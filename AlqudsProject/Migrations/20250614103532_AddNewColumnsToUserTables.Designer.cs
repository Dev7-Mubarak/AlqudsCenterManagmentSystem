// <auto-generated />
using System;
using AlqudsProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlqudsProject.Migrations
{
    [DbContext(typeof(Alquds_CenterContext))]
    [Migration("20250614103532_AddNewColumnsToUserTables")]
    partial class AddNewColumnsToUserTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AlqudsProject.Models.AcademicYear", b =>
                {
                    b.Property<int>("AcademicYearId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AcademicYearID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AcademicYearId"), 1L, 1);

                    b.Property<string>("AcademicYear1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("AcademicYear");

                    b.Property<DateTime?>("DateOfBeginYear")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateOfEndYear")
                        .HasColumnType("date");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("StudentRegistrationSuspensionDate")
                        .HasColumnType("date");

                    b.HasKey("AcademicYearId");

                    b.ToTable("AcademicYear", (string)null);

                    b.HasData(
                        new
                        {
                            AcademicYearId = 1,
                            AcademicYear1 = "2023-2024",
                            DateOfBeginYear = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEndYear = new DateTime(2024, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentRegistrationSuspensionDate = new DateTime(2023, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            AcademicYearId = 2,
                            AcademicYear1 = "2024-2025",
                            DateOfBeginYear = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEndYear = new DateTime(2025, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StudentRegistrationSuspensionDate = new DateTime(2024, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AlqudsProject.Models.ActivitiesImage", b =>
                {
                    b.Property<int>("ActivityImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ActivityImageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ActivityImageId"), 1L, 1);

                    b.Property<string>("Caption")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int")
                        .HasColumnName("ExpenseID");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ImageURL");

                    b.Property<DateTime?>("UploadedAt")
                        .HasColumnType("date");

                    b.HasKey("ActivityImageId");

                    b.HasIndex("ExpenseId");

                    b.ToTable("ActivitiesImages", (string)null);

                    b.HasData(
                        new
                        {
                            ActivityImageId = 1,
                            Caption = "تدشين افتتاح روضة مركز القدس",
                            ExpenseId = 1,
                            ImageUrl = "/images/uploads/Resources/img1.jpg",
                            UploadedAt = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ActivityImageId = 2,
                            Caption = "يوم السرد الشهري لتثبيت المحفوظ",
                            ExpenseId = 2,
                            ImageUrl = "/images/uploads/Resources/img2.jpg",
                            UploadedAt = new DateTime(2025, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ActivityImageId = 3,
                            Caption = "يوم السرد الشهري لتثبيت المحفوظ",
                            ExpenseId = 2,
                            ImageUrl = "/images/uploads/Resources/img4.jpg",
                            UploadedAt = new DateTime(2025, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ActivityImageId = 4,
                            Caption = "يوم السرد الشهري لتثبيت المحفوظ",
                            ExpenseId = 2,
                            ImageUrl = "/images/uploads/Resources/img5.jpg",
                            UploadedAt = new DateTime(2025, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ActivityImageId = 5,
                            Caption = "المشاركة في القيادة التربوية",
                            ExpenseId = 3,
                            ImageUrl = "/images/uploads/Resources/img3.jpg",
                            UploadedAt = new DateTime(2025, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("AlqudsProject.Models.AnnualReport", b =>
                {
                    b.Property<int>("AnnualReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnnualReportId"), 1L, 1);

                    b.Property<int?>("MemorizeAndReviewDegree")
                        .HasColumnType("int");

                    b.Property<string>("MemorizeFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemorizeTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("AnnualReportId");

                    b.HasIndex("StudentId");

                    b.ToTable("AnnualReports");
                });

            modelBuilder.Entity("AlqudsProject.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<byte[]>("ProfilePicture")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bc8841d1-e86f-425b-948d-f97a53318c89",
                            Email = "admin@example.com",
                            EmailConfirmed = true,
                            FirstName = "",
                            LastName = "",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@EXAMPLE.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEIGDPDIcQlCbHHCMK6KQi6O2fGnePcpJKIaOa/KpkxX39V8QvLCe/pPljsnQWb/I2A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6644264d-bc2c-4422-a5c3-c20e48b1ee61",
                            TwoFactorEnabled = false,
                            UserName = "Admin"
                        });
                });

            modelBuilder.Entity("AlqudsProject.Models.CenterAnnualReport", b =>
                {
                    b.Property<int>("CenterAnnualReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CenterAnnualReportId"), 1L, 1);

                    b.Property<int?>("AcademicYearId")
                        .HasColumnType("int");

                    b.Property<string>("Achievements")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Challenges")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByNavigationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("EventsCount")
                        .HasColumnType("int");

                    b.Property<int?>("GraduatedStudents")
                        .HasColumnType("int");

                    b.Property<int?>("NewStudents")
                        .HasColumnType("int");

                    b.Property<string>("Recommendations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalHalaqat")
                        .HasColumnType("int");

                    b.Property<int?>("TotalStudents")
                        .HasColumnType("int");

                    b.Property<int?>("TotalTeachers")
                        .HasColumnType("int");

                    b.HasKey("CenterAnnualReportId");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("CreatedByNavigationId");

                    b.ToTable("CenterAnnualReports");
                });

            modelBuilder.Entity("AlqudsProject.Models.DailyEvaluation", b =>
                {
                    b.Property<int>("DailyEvaluationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DailyEvaluationID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DailyEvaluationId"), 1L, 1);

                    b.Property<string>("AttendanceStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<double?>("MemorizeScore")
                        .HasColumnType("float");

                    b.Property<double?>("ReviewScore")
                        .HasColumnType("float");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    b.Property<double?>("TotalScore")
                        .HasColumnType("float");

                    b.HasKey("DailyEvaluationId");

                    b.HasIndex("StudentId");

                    b.ToTable("DailyEvaluation", (string)null);
                });

            modelBuilder.Entity("AlqudsProject.Models.DailyMemorizePlan", b =>
                {
                    b.Property<int>("DailyMemorizePlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DailyMemorizePlanId"), 1L, 1);

                    b.Property<string>("Amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Day")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FromPage")
                        .HasColumnType("int");

                    b.Property<int?>("MemorizePlanId")
                        .HasColumnType("int");

                    b.Property<string>("Surah")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ToPage")
                        .HasColumnType("int");

                    b.HasKey("DailyMemorizePlanId");

                    b.HasIndex("MemorizePlanId");

                    b.ToTable("DailyMemorizePlans");
                });

            modelBuilder.Entity("AlqudsProject.Models.DailyReviewPlan", b =>
                {
                    b.Property<int>("DailyReviewPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DailyReviewPlanId"), 1L, 1);

                    b.Property<string>("Amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReviewPlanId")
                        .HasColumnType("int");

                    b.Property<string>("Surah")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DailyReviewPlanId");

                    b.HasIndex("ReviewPlanId");

                    b.ToTable("DailyReviewPlans");
                });

            modelBuilder.Entity("AlqudsProject.Models.Expense", b =>
                {
                    b.Property<int>("ExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ExpenseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpenseId"), 1L, 1);

                    b.Property<int?>("AcademicYearId")
                        .HasColumnType("int")
                        .HasColumnName("AcademicYearID");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActivity")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PaidBy")
                        .HasColumnType("int");

                    b.Property<string>("PaidByNavigationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ExpenseId");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("PaidByNavigationId");

                    b.ToTable("Expenses", (string)null);

                    b.HasData(
                        new
                        {
                            ExpenseId = 1,
                            AcademicYearId = 1,
                            Amount = 30000.00m,
                            Date = new DateTime(2025, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "\r\nفي ظل سعي مركز القدس لتحفيظ القرآن الكريم لتوسيع خدماته التعليمية وتلبية احتياجات المجتمع المحلي، تم بحمد الله وتوفيقه تدشين \"روضة مركز القدس\"، في حفل بهيج أقيم في مقر المركز، بحضور عدد من القيادات التربوية وأمهات الطالبات ومعلمات المركز.",
                            IsActivity = true,
                            Notes = "وقد استُهل الحفل بآيات من الذكر الحكيم، ثم تلتها كلمة ترحيبية من إدارة المركز، أشادت خلالها بأهمية مرحلة الطفولة المبكرة في بناء الشخصية وتنمية القيم، مؤكدة أن افتتاح الروضة يُعد خطوة نوعية ضمن مسيرة المركز في تقديم تعليم قرآني وتربوي متكامل يبدأ من الطفولة وحتى سن الفتيات.\r\nوقد اشتمل حفل التدشين على فقرات متعددة، منها عرض مرئي تعريفي بمرافق الروضة الجديدة وتجهيزاتها الحديثة، وجولة ميدانية اطلع فيها الزوار على الفصول الدراسية المصممة وفق بيئة تعليمية جاذبة وآمنة، إضافة إلى أنشطة ترفيهية تفاعلية للأطفال، وركن للخط والرسم، مما أضفى على الأجواء طابعًا من البهجة والسرور.\r\nكما تم في نهاية الحفل تكريم الطاقم التربوي والإداري القائم على الروضة، وتوزيع هدايا رمزية على الأطفال، وتوثيق لحظات التدشين بعدسة فريق التصوير الخاص بالمركز.\r\nويأتي هذا المشروع انطلاقًا من رؤية المركز الطموحة في بناء جيل قرآني منسجم مع القيم الإسلامية، وتوفير بيئة تعليمية راقية تنمّي القدرات الذهنية والحسية والحركية للطفل، وتُعزز من ارتباطه بالقرآن الكريم منذ سنواته الأولى.\r\n",
                            PaidBy = 4,
                            Title = "تدشين افتتاح روضة مركز القدس"
                        },
                        new
                        {
                            ExpenseId = 2,
                            AcademicYearId = 1,
                            Amount = 30000.00m,
                            Date = new DateTime(2025, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "\r\nضمن الخطة التربوية التي ينتهجها مركز القدس لتحفيظ القرآن الكريم، وحرصًا على ترسيخ المحفوظ في صدور الطالبات، نظّم المركز \"يوم السرد الشهري\"، وهو برنامج تقييم شامل يهدف إلى متابعة الحفظ وتثبيته وتقدير الجهود المبذولة من الطالبات.",
                            IsActivity = true,
                            Notes = "وقد شاركت في هذا اليوم جميع الطالبات من مختلف الحلقات والمستويات، حيث تم تنظيم جلسات سرد جماعي وفردي أمام لجان التقييم المتخصصة من معلمات ذوات خبرة في التجويد وضبط المصحف، وشملت عملية التقييم مراجعة شاملة للمحفوظات السابقة وفق الخطة الفصلية المعتمدة لكل طالبة.\r\nسادت الأجواء روح من الحماس والجدية، حيث حرصت الطالبات على تقديم أفضل ما لديهن من أداء وجودة في الحفظ، بينما قامت اللجان بتوثيق النتائج ورفع التقارير لكل حلقة لتُؤخذ بعين الاعتبار في إعداد تقارير الأداء السنوي.\r\nوتخلل اليوم فقرات تحفيزية للطالبات المتقنات، حيث تم توزيع شهادات تقدير وهدايا رمزية لكل طالبة أظهرت التزامًا وانضباطًا في حفظها، مما عزّز من روح المنافسة الإيجابية بينهن، وشجع غيرهن على المثابرة.\r\nويُعد هذا البرنامج أحد أهم البرامج التربوية التي يحرص عليها المركز، لكونه يُسهم في متابعة تطور كل طالبة بشكل دوري، ويمنح ولي الأمر والمعلمة صورة واضحة عن مستوى الحفظ والثغرات التي تحتاج مراجعة ومعالجة.\r\nختامًا، فإن يوم السرد الشهري ليس مجرد تقييم، بل هو احتفال شهري بمنهجية القرآن، وانتصار للإصرار والمثابرة، وتجسيد عملي لمقولة: \"خيركم من تعلم القرآن وعلّمه\".",
                            PaidBy = 4,
                            Title = "يوم السرد الشهري لتثبيت المحفوظ"
                        },
                        new
                        {
                            ExpenseId = 3,
                            AcademicYearId = 1,
                            Amount = 30000.00m,
                            Date = new DateTime(2025, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "\r\nفي إطار تعزيز الكفاءة المهنية وبناء بيئة تعليمية مؤثرة وفاعلة، شاركت معلمات وإداريات مركز القدس لتحفيظ القرآن الكريم في أنشطة القيادة التربوية التي تهدف إلى تطوير المهارات القيادية، وتنمية القدرات في التخطيط والتنظيم والإشراف التربوي.",
                            IsActivity = true,
                            Notes = "\r\nوقد تمثلت المشاركة في حضور اللقاءات التربوية الدورية، والمساهمة في إعداد الخطط التعليمية للحلقات، وتنظيم الفعاليات القرآنية والتربوية داخل المركز، وتقديم المبادرات النوعية التي تُسهم في رفع جودة الأداء داخل الحلقة وخارجها.\r\nكما شاركت عدد من المعلمات في مهام قيادية داخل المركز، مثل الإشراف العام على الحلقات، وتوجيه المعلمات المستجدات، وإعداد ملفات الإنجاز، ومتابعة تنفيذ المعايير التعليمية والتقويمية.\r\nوتعكس هذه المشاركة روح المسؤولية العالية لدى الفريق التربوي في المركز، وحرصه على ترسيخ القيم القيادية القائمة على العمل الجماعي، والقدوة الصالحة، والتطوير المستمر، بما يواكب رؤية المركز في إعداد جيل قرآني متمكن، تقوده كوادر مؤهلة قياديًا وتربويًا.",
                            PaidBy = 4,
                            Title = "المشاركة في القيادة التربوية"
                        });
                });

            modelBuilder.Entity("AlqudsProject.Models.FinalExam", b =>
                {
                    b.Property<int>("FinalExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FinalExamID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinalExamId"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<double?>("MemorizeScore")
                        .HasColumnType("float");

                    b.Property<string>("Notes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("ReviewScore")
                        .HasColumnType("float");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    b.Property<double?>("TotalScore")
                        .HasColumnType("float");

                    b.HasKey("FinalExamId");

                    b.HasIndex("StudentId");

                    b.ToTable("FinalExam", (string)null);

                    b.HasData(
                        new
                        {
                            FinalExamId = 1002,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MemorizeScore = 50.0,
                            Notes = "ممتاز",
                            ReviewScore = 50.0,
                            StudentId = 3,
                            TotalScore = 100.0
                        },
                        new
                        {
                            FinalExamId = 1003,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MemorizeScore = 50.0,
                            ReviewScore = 50.0,
                            StudentId = 3,
                            TotalScore = 100.0
                        });
                });

            modelBuilder.Entity("AlqudsProject.Models.FinancialSummary", b =>
                {
                    b.Property<int>("FinancialSummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinancialSummaryId"), 1L, 1);

                    b.Property<int?>("AcademicYearId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("TotalExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TotalSupport")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("FinancialSummaryId");

                    b.HasIndex("AcademicYearId");

                    b.ToTable("FinancialSummaries");
                });

            modelBuilder.Entity("AlqudsProject.Models.FinancialSupport", b =>
                {
                    b.Property<int>("FinancialSupportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FinancialSupportID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinancialSupportId"), 1L, 1);

                    b.Property<int?>("AcademicYearId")
                        .HasColumnType("int")
                        .HasColumnName("AcademicYearID");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Notes")
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupporterName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("FinancialSupportId");

                    b.HasIndex("AcademicYearId");

                    b.ToTable("FinancialSupport", (string)null);

                    b.HasData(
                        new
                        {
                            FinancialSupportId = 1,
                            AcademicYearId = 1,
                            Amount = 100000.00m,
                            Date = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "دعم شهري",
                            SupporterName = "محسن الخير"
                        },
                        new
                        {
                            FinancialSupportId = 2,
                            AcademicYearId = 1,
                            Amount = 500000.00m,
                            Date = new DateTime(2024, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "دعم مشروع",
                            SupporterName = "شركة الأمل"
                        },
                        new
                        {
                            FinancialSupportId = 3,
                            AcademicYearId = 1,
                            Amount = 50000.00m,
                            Date = new DateTime(2024, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "دعم عام",
                            SupporterName = "فاعل خير"
                        },
                        new
                        {
                            FinancialSupportId = 4,
                            AcademicYearId = 1,
                            Amount = 600000.00m,
                            Date = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "دعم الأنشطة",
                            SupporterName = "مؤسسة النور"
                        },
                        new
                        {
                            FinancialSupportId = 5,
                            AcademicYearId = 1,
                            Amount = 20000.00m,
                            Date = new DateTime(2024, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "دعم شهري",
                            SupporterName = "أحمد محمد"
                        });
                });

            modelBuilder.Entity("AlqudsProject.Models.Halaqa", b =>
                {
                    b.Property<int>("HalaqaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HalaqaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HalaqaId"), 1L, 1);

                    b.Property<int?>("AcademicYearId")
                        .HasColumnType("int")
                        .HasColumnName("AcademicYearID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("TeacherID");

                    b.HasKey("HalaqaId");

                    b.HasIndex("AcademicYearId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Halaqa", (string)null);

                    b.HasData(
                        new
                        {
                            HalaqaId = 1,
                            AcademicYearId = 1,
                            Name = "حلقة النور",
                            Period = "صباحي",
                            TeacherId = 1
                        },
                        new
                        {
                            HalaqaId = 2,
                            AcademicYearId = 1,
                            Name = "حلقة الفرقان",
                            Period = "مسائي",
                            TeacherId = 2
                        },
                        new
                        {
                            HalaqaId = 3,
                            AcademicYearId = 1,
                            Name = "حلقة الإيمان",
                            Period = "صباحي",
                            TeacherId = 3
                        },
                        new
                        {
                            HalaqaId = 4,
                            AcademicYearId = 1,
                            Name = "حلقة الهدى",
                            Period = "مسائي",
                            TeacherId = 2
                        },
                        new
                        {
                            HalaqaId = 5,
                            AcademicYearId = 1,
                            Name = "حلقة الفلاح",
                            Period = "صباحي",
                            TeacherId = 1
                        },
                        new
                        {
                            HalaqaId = 6,
                            AcademicYearId = 1,
                            Name = "حلقة التقوى",
                            Period = "مسائي",
                            TeacherId = 2
                        },
                        new
                        {
                            HalaqaId = 7,
                            AcademicYearId = 1,
                            Name = "حلقة البر",
                            Period = "صباحي",
                            TeacherId = 1
                        },
                        new
                        {
                            HalaqaId = 8,
                            AcademicYearId = 1,
                            Name = "حلقة الإحسان",
                            Period = "مسائي",
                            TeacherId = 2
                        },
                        new
                        {
                            HalaqaId = 9,
                            AcademicYearId = 1,
                            Name = "حلقة الصديق",
                            Period = "صباحي",
                            TeacherId = 2
                        },
                        new
                        {
                            HalaqaId = 10,
                            AcademicYearId = 1,
                            Name = "حلقة الفاروق",
                            Period = "مسائي",
                            TeacherId = 3
                        });
                });

            modelBuilder.Entity("AlqudsProject.Models.HalaqaManhaj", b =>
                {
                    b.Property<int>("HalaqaManhajId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("HalaqaManhajID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HalaqaManhajId"), 1L, 1);

                    b.Property<int?>("HalaqaId")
                        .HasColumnType("int")
                        .HasColumnName("HalaqaID");

                    b.Property<int?>("ManhajId")
                        .HasColumnType("int")
                        .HasColumnName("ManhajID");

                    b.HasKey("HalaqaManhajId");

                    b.HasIndex("HalaqaId");

                    b.HasIndex("ManhajId");

                    b.ToTable("HalaqaManhaj", (string)null);
                });

            modelBuilder.Entity("AlqudsProject.Models.Manhaj", b =>
                {
                    b.Property<int>("ManhajId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ManhajID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ManhajId"), 1L, 1);

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Picture")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Url")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("URL");

                    b.HasKey("ManhajId");

                    b.ToTable("Manhaj", (string)null);

                    b.HasData(
                        new
                        {
                            ManhajId = 1,
                            Name = "منهج التجويد",
                            Picture = "C:\\Users\\User\\Pictures\\tajweed.jpg",
                            Url = "www.example.com/tajweed"
                        },
                        new
                        {
                            ManhajId = 2,
                            Name = "تحفة الأطفال",
                            Picture = "C:\\Users\\User\\Pictures\\tohfat-alatfal.jpg",
                            Url = "www.example.com/tohfat-alatfal"
                        },
                        new
                        {
                            ManhajId = 3,
                            Name = "الجزرية",
                            Picture = "C:\\Users\\User\\Pictures\\jazariya.jpg",
                            Url = "www.example.com/jazariya"
                        },
                        new
                        {
                            ManhajId = 4,
                            Name = "الأربعون النووية",
                            Picture = "C:\\Users\\User\\Pictures\\arbaoon-nawawi.jpg",
                            Url = "www.example.com/arbaoon-nawawi"
                        },
                        new
                        {
                            ManhajId = 5,
                            Name = "رياض الصالحين",
                            Picture = "C:\\Users\\User\\Pictures\\riyad-al-salihin.jpg",
                            Url = "www.example.com/riyad-al-salihin"
                        });
                });

            modelBuilder.Entity("AlqudsProject.Models.MemorizationPath", b =>
                {
                    b.Property<int>("PathId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PathID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PathId"), 1L, 1);

                    b.Property<string>("MemorizeFrom")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MemorizeTo")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PathId");

                    b.ToTable("MemorizationPath", (string)null);

                    b.HasData(
                        new
                        {
                            PathId = 1,
                            MemorizeFrom = "الناس",
                            MemorizeTo = "الذاريات",
                            Name = "المستوى الأول"
                        },
                        new
                        {
                            PathId = 2,
                            MemorizeFrom = "ق",
                            MemorizeTo = "الشعراء",
                            Name = "المستوى الثاني"
                        },
                        new
                        {
                            PathId = 3,
                            MemorizeFrom = "الفرقان",
                            MemorizeTo = "الرعد",
                            Name = "المستوى الثالث"
                        },
                        new
                        {
                            PathId = 4,
                            MemorizeFrom = "يوسف",
                            MemorizeTo = "الأنعام",
                            Name = "المستوى الرابع"
                        },
                        new
                        {
                            PathId = 5,
                            MemorizeFrom = "المائدة",
                            MemorizeTo = "الفاتحة",
                            Name = "المستوى الخامس"
                        });
                });

            modelBuilder.Entity("AlqudsProject.Models.MemorizePlan", b =>
                {
                    b.Property<int>("MemorizePlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MemorizePlanID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemorizePlanId"), 1L, 1);

                    b.Property<int?>("BeginPage")
                        .HasColumnType("int");

                    b.Property<double?>("DailyAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    b.HasKey("MemorizePlanId");

                    b.HasIndex("StudentId");

                    b.ToTable("MemorizePlan", (string)null);
                });

            modelBuilder.Entity("AlqudsProject.Models.MonthlyExam", b =>
                {
                    b.Property<int>("MonthlyExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MonthlyExamID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MonthlyExamId"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<double?>("MemorizeScore")
                        .HasColumnType("float");

                    b.Property<string>("Notes")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("ReviewScore")
                        .HasColumnType("float");

                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    b.Property<double?>("TotalScore")
                        .HasColumnType("float");

                    b.HasKey("MonthlyExamId");

                    b.HasIndex("StudentId");

                    b.ToTable("MonthlyExam", (string)null);

                    b.HasData(
                        new
                        {
                            MonthlyExamId = 1,
                            Date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MemorizeScore = 8.0,
                            ReviewScore = 8.0,
                            StudentId = 3,
                            TotalScore = 16.0
                        });
                });

            modelBuilder.Entity("AlqudsProject.Models.Parent", b =>
                {
                    b.Property<int>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ParentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParentId"), 1L, 1);

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("ParentId");

                    b.ToTable("Parents", (string)null);

                    b.HasData(
                        new
                        {
                            ParentId = 1,
                            MobileNumber = "05311111122",
                            Name = "أحمد علي محمد",
                            PhoneNumber = "312340"
                        },
                        new
                        {
                            ParentId = 2,
                            MobileNumber = "05322222233",
                            Name = "محمد عمر عبدالله",
                            PhoneNumber = "343210"
                        },
                        new
                        {
                            ParentId = 3,
                            MobileNumber = "05333333344",
                            Name = "يوسف خالد يوسف",
                            PhoneNumber = "367890"
                        },
                        new
                        {
                            ParentId = 4,
                            MobileNumber = "05344444455",
                            Name = "عبدالله سعيد إبراهيم",
                            PhoneNumber = "398760"
                        },
                        new
                        {
                            ParentId = 5,
                            MobileNumber = "05355555566",
                            Name = "عمر حسن إسماعيل",
                            PhoneNumber = "323450"
                        },
                        new
                        {
                            ParentId = 6,
                            MobileNumber = "05366666677",
                            Name = "علي حسين أحمد",
                            PhoneNumber = "354320"
                        },
                        new
                        {
                            ParentId = 7,
                            MobileNumber = "05377777788",
                            Name = "خالد محمود محمد",
                            PhoneNumber = "378900"
                        },
                        new
                        {
                            ParentId = 8,
                            MobileNumber = "05388888899",
                            Name = "سعيد سامي عمر",
                            PhoneNumber = "309870"
                        },
                        new
                        {
                            ParentId = 9,
                            MobileNumber = "05399999900",
                            Name = "إبراهيم أنور عبدالله",
                            PhoneNumber = "334560"
                        },
                        new
                        {
                            ParentId = 10,
                            MobileNumber = "05300000011",
                            Name = "إسماعيل ياسر يوسف",
                            PhoneNumber = "365430"
                        },
                        new
                        {
                            ParentId = 11,
                            MobileNumber = "05311111222",
                            Name = "أبو ليلى خالد إبراهيم",
                            PhoneNumber = "312350"
                        },
                        new
                        {
                            ParentId = 12,
                            MobileNumber = "05322222333",
                            Name = "أبو نور سعيد إسماعيل",
                            PhoneNumber = "343220"
                        },
                        new
                        {
                            ParentId = 13,
                            MobileNumber = "05333333444",
                            Name = "أبو هدى حسن أحمد",
                            PhoneNumber = "367900"
                        },
                        new
                        {
                            ParentId = 14,
                            MobileNumber = "05344444555",
                            Name = "أبو منى حسين محمد",
                            PhoneNumber = "398770"
                        },
                        new
                        {
                            ParentId = 15,
                            MobileNumber = "05355555666",
                            Name = "أبو سارة محمود عمر",
                            PhoneNumber = "323460"
                        },
                        new
                        {
                            ParentId = 16,
                            MobileNumber = "05366666777",
                            Name = "أبو ريم سامي عبدالله",
                            PhoneNumber = "354330"
                        },
                        new
                        {
                            ParentId = 17,
                            MobileNumber = "05377777888",
                            Name = "أبو آية أنور يوسف",
                            PhoneNumber = "378910"
                        },
                        new
                        {
                            ParentId = 18,
                            MobileNumber = "05388888999",
                            Name = "أبو فاطمة ياسر إبراهيم",
                            PhoneNumber = "309880"
                        },
                        new
                        {
                            ParentId = 19,
                            MobileNumber = "05399999000",
                            Name = "أبو زينب كريم إسماعيل",
                            PhoneNumber = "334570"
                        },
                        new
                        {
                            ParentId = 20,
                            MobileNumber = "05300000111",
                            Name = "أبو مريم نبيل أحمد",
                            PhoneNumber = "365440"
                        },
                        new
                        {
                            ParentId = 1002,
                            MobileNumber = "706667889",
                            Name = "مجدي سالم مرعي",
                            PhoneNumber = "420181"
                        },
                        new
                        {
                            ParentId = 1003,
                            MobileNumber = "714736068",
                            Name = "مجدي سالم مرعي",
                            PhoneNumber = "320181"
                        });
                });

            modelBuilder.Entity("AlqudsProject.Models.PathHalaqaRelationship", b =>
                {
                    b.Property<int>("PathHalaqaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PathHalaqaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PathHalaqaId"), 1L, 1);

                    b.Property<int>("HalaqaId")
                        .HasColumnType("int")
                        .HasColumnName("HalaqaID");

                    b.Property<int>("MemorizationPathPathId")
                        .HasColumnType("int");

                    b.Property<int>("PathId")
                        .HasColumnType("int")
                        .HasColumnName("PathID");

                    b.HasKey("PathHalaqaId");

                    b.HasIndex("HalaqaId");

                    b.HasIndex("MemorizationPathPathId");

                    b.ToTable("Path_Halaqa_Relationship", (string)null);
                });

            modelBuilder.Entity("AlqudsProject.Models.ReviewPlan", b =>
                {
                    b.Property<int>("ReviewPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewPlanId"), 1L, 1);

                    b.Property<string>("AmountOfDelayMemorization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BeginningOfMemorizing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("ReviewPlanId");

                    b.HasIndex("StudentId");

                    b.ToTable("ReviewPlans");
                });

            modelBuilder.Entity("AlqudsProject.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StudentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BeginOfMemorize")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("CurrentEducationalLevel")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EducationalQualification")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("HalaqaId")
                        .HasColumnType("int")
                        .HasColumnName("HalaqaID");

                    b.Property<string>("MemorizationQuorum")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("ParentID");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("StudentId");

                    b.HasIndex("HalaqaId");

                    b.HasIndex("ParentId");

                    b.ToTable("Student", (string)null);

                    b.HasData(
                        new
                        {
                            StudentId = 2,
                            Address = "المكلا",
                            BeginOfMemorize = "الناس",
                            BirthDate = new DateTime(2013, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentEducationalLevel = "ابتدائي",
                            EducationalQualification = "ابتدائي",
                            HalaqaId = 1,
                            MemorizationQuorum = "جزء عم",
                            Name = "ليلى أحمد علي",
                            ParentId = 1
                        },
                        new
                        {
                            StudentId = 3,
                            Address = "المكلا",
                            BeginOfMemorize = "ق",
                            BirthDate = new DateTime(2011, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentEducationalLevel = "إعدادي",
                            EducationalQualification = "إعدادي",
                            HalaqaId = 2,
                            MemorizationQuorum = "جزء تبارك",
                            Name = "نور محمد عمر",
                            ParentId = 2,
                            PhoneNumber = "712222222"
                        },
                        new
                        {
                            StudentId = 4,
                            Address = "المكلا",
                            BeginOfMemorize = "الفرقان",
                            BirthDate = new DateTime(2008, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentEducationalLevel = "ثانوي",
                            EducationalQualification = "ثانوي",
                            HalaqaId = 3,
                            MemorizationQuorum = "جزء قد سمع",
                            Name = "هدى يوسف خالد",
                            ParentId = 3,
                            PhoneNumber = "713333333"
                        },
                        new
                        {
                            StudentId = 5,
                            Address = "المكلا",
                            BeginOfMemorize = "الناس",
                            BirthDate = new DateTime(2014, 9, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentEducationalLevel = "ابتدائي",
                            EducationalQualification = "ابتدائي",
                            HalaqaId = 4,
                            MemorizationQuorum = "جزء عم",
                            Name = "منى عبدالله سعيد",
                            ParentId = 4
                        },
                        new
                        {
                            StudentId = 6,
                            Address = "المكلا",
                            BeginOfMemorize = "ق",
                            BirthDate = new DateTime(2012, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentEducationalLevel = "إعدادي",
                            EducationalQualification = "إعدادي",
                            HalaqaId = 5,
                            MemorizationQuorum = "جزء تبارك",
                            Name = "سارة عمر حسن",
                            ParentId = 5,
                            PhoneNumber = "715555555"
                        },
                        new
                        {
                            StudentId = 7,
                            Address = "المكلا",
                            BeginOfMemorize = "الفرقان",
                            BirthDate = new DateTime(2009, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentEducationalLevel = "ثانوي",
                            EducationalQualification = "ثانوي",
                            HalaqaId = 6,
                            MemorizationQuorum = "جزء قد سمع",
                            Name = "ريم علي حسين",
                            ParentId = 6,
                            PhoneNumber = "716666666"
                        },
                        new
                        {
                            StudentId = 8,
                            Address = "المكلا",
                            BeginOfMemorize = "الناس",
                            BirthDate = new DateTime(2013, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentEducationalLevel = "ابتدائي",
                            EducationalQualification = "ابتدائي",
                            HalaqaId = 7,
                            MemorizationQuorum = "جزء عم",
                            Name = "آية خالد محمود",
                            ParentId = 7
                        },
                        new
                        {
                            StudentId = 9,
                            Address = "المكلا",
                            BeginOfMemorize = "ق",
                            BirthDate = new DateTime(2010, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentEducationalLevel = "إعدادي",
                            EducationalQualification = "إعدادي",
                            HalaqaId = 8,
                            MemorizationQuorum = "جزء تبارك",
                            Name = "فاطمة سعيد سامي",
                            ParentId = 8,
                            PhoneNumber = "718888888"
                        },
                        new
                        {
                            StudentId = 10,
                            Address = "المكلا",
                            BeginOfMemorize = "الفرقان",
                            BirthDate = new DateTime(2007, 2, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentEducationalLevel = "ثانوي",
                            EducationalQualification = "ثانوي",
                            HalaqaId = 9,
                            MemorizationQuorum = "جزء قد سمع",
                            Name = "زينب إبراهيم أنور",
                            ParentId = 9,
                            PhoneNumber = "719999999"
                        },
                        new
                        {
                            StudentId = 11,
                            Address = "المكلا",
                            BeginOfMemorize = "الناس",
                            BirthDate = new DateTime(2014, 11, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentEducationalLevel = "ابتدائي",
                            EducationalQualification = "ابتدائي",
                            HalaqaId = 10,
                            MemorizationQuorum = "جزء عم",
                            Name = "مريم إسماعيل ياسر",
                            ParentId = 10
                        });
                });

            modelBuilder.Entity("AlqudsProject.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TeacherID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AmountOfMemorization")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Courses")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EducationalQualification")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Experience")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Idnumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsAdministrator")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMojaz")
                        .HasColumnType("bit");

                    b.Property<string>("Job")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaritalStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PassportNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("TeacherId");

                    b.ToTable("Teacher", (string)null);

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            Address = "المكلا",
                            AmountOfMemorization = "30 جزء",
                            BirthDate = new DateTime(1980, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Courses = "دورات تجويد",
                            EducationalQualification = "بكالوريوس دراسات إسلامية",
                            Experience = "10 سنوات",
                            Idnumber = "43545645",
                            IsAdministrator = false,
                            IsMojaz = true,
                            Job = "معلمة قرآن",
                            MaritalStatus = "متزوجة",
                            Name = "فاطمة علي محمد",
                            PassportNumber = "P123456",
                            PhoneNumber = "772345678"
                        },
                        new
                        {
                            TeacherId = 2,
                            Address = "المكلا",
                            AmountOfMemorization = "15 جزء",
                            BirthDate = new DateTime(1985, 8, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Courses = "دورات تجويد",
                            EducationalQualification = "دبلوم دراسات إسلامية",
                            Experience = "5 سنوات",
                            Idnumber = "43545645",
                            IsAdministrator = false,
                            IsMojaz = false,
                            Job = "معلمة قرآن",
                            MaritalStatus = "عزباء",
                            Name = "خديجة عمر عبدالله",
                            PassportNumber = "P654321",
                            PhoneNumber = "773456789"
                        },
                        new
                        {
                            TeacherId = 3,
                            Address = "المكلا",
                            AmountOfMemorization = "20 جزء",
                            BirthDate = new DateTime(1990, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Courses = "دورات تجويد",
                            EducationalQualification = "بكالوريوس لغة عربية",
                            Experience = "3 سنوات",
                            Idnumber = "43545645",
                            IsAdministrator = false,
                            IsMojaz = true,
                            Job = "معلمة قرآن",
                            MaritalStatus = "متزوجة",
                            Name = "عائشة خالد يوسف",
                            PassportNumber = "P789012",
                            PhoneNumber = "775678901"
                        });
                });

            modelBuilder.Entity("AlqudsProject.Models.TeacherAttendance", b =>
                {
                    b.Property<int>("TeacherAttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TeacherAttendanceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherAttendanceId"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int?>("RecordedBy")
                        .HasColumnType("int")
                        .HasColumnName("RecordedBy");

                    b.Property<string>("RecordedByNavigationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("TeacherId")
                        .HasColumnType("int")
                        .HasColumnName("TeacherID");

                    b.HasKey("TeacherAttendanceId");

                    b.HasIndex("RecordedByNavigationId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherAttendance", (string)null);
                });

            modelBuilder.Entity("AlqudsProject.Models.TermReport", b =>
                {
                    b.Property<int>("TermReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TermReportId"), 1L, 1);

                    b.Property<double>("MemorizeDegree")
                        .HasColumnType("float");

                    b.Property<string>("MemorizeFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemorizeTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MonthlyResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ReviewDegree")
                        .HasColumnType("float");

                    b.Property<string>("ReviewFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReviewTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Term")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TermResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalDegree")
                        .HasColumnType("float");

                    b.Property<string>("TotalResult")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TermReportId");

                    b.HasIndex("StudentId");

                    b.ToTable("TermReports");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "11111111-1111-1111-1111-111111111111",
                            ConcurrencyStamp = "1ab81145-a571-432c-98d6-d87baa981758",
                            Name = "أداري",
                            NormalizedName = "أداري"
                        },
                        new
                        {
                            Id = "22222222-2222-2222-2222-222222222222",
                            ConcurrencyStamp = "3f70dd74-3020-4b0f-a0f4-7dc8fe30f019",
                            Name = "معلم",
                            NormalizedName = "معلم"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa",
                            RoleId = "11111111-1111-1111-1111-111111111111"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("AlqudsProject.Models.ActivitiesImage", b =>
                {
                    b.HasOne("AlqudsProject.Models.Expense", "Expense")
                        .WithMany("ActivitiesImages")
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ActivitiesImages_Expense");

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("AlqudsProject.Models.AnnualReport", b =>
                {
                    b.HasOne("AlqudsProject.Models.Student", "Student")
                        .WithMany("AnnualReports")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AlqudsProject.Models.CenterAnnualReport", b =>
                {
                    b.HasOne("AlqudsProject.Models.AcademicYear", "AcademicYear")
                        .WithMany("CenterAnnualReports")
                        .HasForeignKey("AcademicYearId");

                    b.HasOne("AlqudsProject.Models.AppUser", "CreatedByNavigation")
                        .WithMany()
                        .HasForeignKey("CreatedByNavigationId");

                    b.Navigation("AcademicYear");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("AlqudsProject.Models.DailyEvaluation", b =>
                {
                    b.HasOne("AlqudsProject.Models.Student", "Student")
                        .WithMany("DailyEvaluations")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AlqudsProject.Models.DailyMemorizePlan", b =>
                {
                    b.HasOne("AlqudsProject.Models.MemorizePlan", "MemorizePlan")
                        .WithMany("DailyMemorizePlans")
                        .HasForeignKey("MemorizePlanId");

                    b.Navigation("MemorizePlan");
                });

            modelBuilder.Entity("AlqudsProject.Models.DailyReviewPlan", b =>
                {
                    b.HasOne("AlqudsProject.Models.ReviewPlan", "ReviewPlan")
                        .WithMany("DailyReviewPlans")
                        .HasForeignKey("ReviewPlanId");

                    b.Navigation("ReviewPlan");
                });

            modelBuilder.Entity("AlqudsProject.Models.Expense", b =>
                {
                    b.HasOne("AlqudsProject.Models.AcademicYear", "AcademicYear")
                        .WithMany("Expenses")
                        .HasForeignKey("AcademicYearId");

                    b.HasOne("AlqudsProject.Models.AppUser", "PaidByNavigation")
                        .WithMany()
                        .HasForeignKey("PaidByNavigationId");

                    b.Navigation("AcademicYear");

                    b.Navigation("PaidByNavigation");
                });

            modelBuilder.Entity("AlqudsProject.Models.FinalExam", b =>
                {
                    b.HasOne("AlqudsProject.Models.Student", "Student")
                        .WithMany("FinalExams")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AlqudsProject.Models.FinancialSummary", b =>
                {
                    b.HasOne("AlqudsProject.Models.AcademicYear", "AcademicYear")
                        .WithMany("FinancialSummaries")
                        .HasForeignKey("AcademicYearId");

                    b.Navigation("AcademicYear");
                });

            modelBuilder.Entity("AlqudsProject.Models.FinancialSupport", b =>
                {
                    b.HasOne("AlqudsProject.Models.AcademicYear", "AcademicYear")
                        .WithMany("FinancialSupports")
                        .HasForeignKey("AcademicYearId");

                    b.Navigation("AcademicYear");
                });

            modelBuilder.Entity("AlqudsProject.Models.Halaqa", b =>
                {
                    b.HasOne("AlqudsProject.Models.AcademicYear", "AcademicYear")
                        .WithMany("Halaqas")
                        .HasForeignKey("AcademicYearId");

                    b.HasOne("AlqudsProject.Models.Teacher", "Teacher")
                        .WithMany("Halaqas")
                        .HasForeignKey("TeacherId");

                    b.Navigation("AcademicYear");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("AlqudsProject.Models.HalaqaManhaj", b =>
                {
                    b.HasOne("AlqudsProject.Models.Halaqa", "Halaqa")
                        .WithMany("HalaqaManhajs")
                        .HasForeignKey("HalaqaId");

                    b.HasOne("AlqudsProject.Models.Manhaj", "Manhaj")
                        .WithMany("HalaqaManhajs")
                        .HasForeignKey("ManhajId");

                    b.Navigation("Halaqa");

                    b.Navigation("Manhaj");
                });

            modelBuilder.Entity("AlqudsProject.Models.MemorizePlan", b =>
                {
                    b.HasOne("AlqudsProject.Models.Student", "Student")
                        .WithMany("MemorizePlans")
                        .HasForeignKey("StudentId");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AlqudsProject.Models.MonthlyExam", b =>
                {
                    b.HasOne("AlqudsProject.Models.Student", "Student")
                        .WithMany("MonthlyExams")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AlqudsProject.Models.PathHalaqaRelationship", b =>
                {
                    b.HasOne("AlqudsProject.Models.Halaqa", "Halaqa")
                        .WithMany("PathHalaqaRelationships")
                        .HasForeignKey("HalaqaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlqudsProject.Models.MemorizationPath", "MemorizationPath")
                        .WithMany("PathHalaqaRelationships")
                        .HasForeignKey("MemorizationPathPathId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Halaqa");

                    b.Navigation("MemorizationPath");
                });

            modelBuilder.Entity("AlqudsProject.Models.ReviewPlan", b =>
                {
                    b.HasOne("AlqudsProject.Models.Student", "Student")
                        .WithMany("ReviewPlans")
                        .HasForeignKey("StudentId");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AlqudsProject.Models.Student", b =>
                {
                    b.HasOne("AlqudsProject.Models.Halaqa", "Halaqa")
                        .WithMany("Students")
                        .HasForeignKey("HalaqaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Student__HalaqaI__73BA3083");

                    b.HasOne("AlqudsProject.Models.Parent", "Parent")
                        .WithMany("Students")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__Student__ParentI__74AE54BC");

                    b.Navigation("Halaqa");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("AlqudsProject.Models.TeacherAttendance", b =>
                {
                    b.HasOne("AlqudsProject.Models.AppUser", "RecordedByNavigation")
                        .WithMany()
                        .HasForeignKey("RecordedByNavigationId");

                    b.HasOne("AlqudsProject.Models.Teacher", "Teacher")
                        .WithMany("TeacherAttendances")
                        .HasForeignKey("TeacherId");

                    b.Navigation("RecordedByNavigation");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("AlqudsProject.Models.TermReport", b =>
                {
                    b.HasOne("AlqudsProject.Models.Student", "Student")
                        .WithMany("TermReports")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AlqudsProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AlqudsProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlqudsProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AlqudsProject.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AlqudsProject.Models.AcademicYear", b =>
                {
                    b.Navigation("CenterAnnualReports");

                    b.Navigation("Expenses");

                    b.Navigation("FinancialSummaries");

                    b.Navigation("FinancialSupports");

                    b.Navigation("Halaqas");
                });

            modelBuilder.Entity("AlqudsProject.Models.Expense", b =>
                {
                    b.Navigation("ActivitiesImages");
                });

            modelBuilder.Entity("AlqudsProject.Models.Halaqa", b =>
                {
                    b.Navigation("HalaqaManhajs");

                    b.Navigation("PathHalaqaRelationships");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("AlqudsProject.Models.Manhaj", b =>
                {
                    b.Navigation("HalaqaManhajs");
                });

            modelBuilder.Entity("AlqudsProject.Models.MemorizationPath", b =>
                {
                    b.Navigation("PathHalaqaRelationships");
                });

            modelBuilder.Entity("AlqudsProject.Models.MemorizePlan", b =>
                {
                    b.Navigation("DailyMemorizePlans");
                });

            modelBuilder.Entity("AlqudsProject.Models.Parent", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("AlqudsProject.Models.ReviewPlan", b =>
                {
                    b.Navigation("DailyReviewPlans");
                });

            modelBuilder.Entity("AlqudsProject.Models.Student", b =>
                {
                    b.Navigation("AnnualReports");

                    b.Navigation("DailyEvaluations");

                    b.Navigation("FinalExams");

                    b.Navigation("MemorizePlans");

                    b.Navigation("MonthlyExams");

                    b.Navigation("ReviewPlans");

                    b.Navigation("TermReports");
                });

            modelBuilder.Entity("AlqudsProject.Models.Teacher", b =>
                {
                    b.Navigation("Halaqas");

                    b.Navigation("TeacherAttendances");
                });
#pragma warning restore 612, 618
        }
    }
}
